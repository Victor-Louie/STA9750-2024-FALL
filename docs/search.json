[
  {
    "objectID": "mp1.html",
    "href": "mp1.html",
    "title": "MP1",
    "section": "",
    "text": "if(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\nLoading required package: tidyverse\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Let's start with Fare Revenue\nlibrary(tidyverse)\nif(!file.exists(\"2022_fare_revenue.xlsx\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_fare_revenue.xlsx\" in your project\n  # directory.\n  download.file(\"http://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx\", \n                destfile=\"2022_fare_revenue.xlsx\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`)\n\n# Next, expenses\nif(!file.exists(\"2022_expenses.csv\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_expenses.csv\" in your project\n  # directory.\n  download.file(\"https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true\", \n                destfile=\"2022_expenses.csv\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nRows: 3744 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Agency, City, State, NTD ID, Organization Type, Reporter Type, UZA...\ndbl  (2): Report Year, UACE Code\nnum (10): Primary UZA Population, Agency VOMS, Mode VOMS, Vehicle Operations...\nlgl  (7): Vehicle Operations Questionable, Vehicle Maintenance Questionable,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n`summarise()` has grouped output by 'NTD ID'. You can override using the `.groups` argument.\n\n# Monthly Transit Numbers\nlibrary(tidyverse)\nif(!file.exists(\"ridership.xlsx\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"ridership.xlsx\" in your project\n  # directory.\n  download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx\", \n                destfile=\"ridership.xlsx\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"UPT\") |&gt;\n  drop_na() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"VRM\") |&gt;\n  drop_na() |&gt;\n  group_by(`NTD ID`, `Agency`, `UZA Name`, \n           `Mode`, `3 Mode`, month) |&gt;\n  rename(`metro_area` = `UZA Name`)|&gt;\n  summarize(VRM = sum(VRM)) |&gt;\n  filter(`VRM`== max(`VRM`))|&gt;\n  ungroup() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'metro_area', 'Mode',\n'3 Mode'. You can override using the `.groups` argument.\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\n\nJoining with `by = join_by(`NTD ID`, Agency, Mode, `3 Mode`, month)`\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n### 2: Recoding the Mode column\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"FB\" ~ \"Ferryboats\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"DR\" ~ \"Demand Reponse\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    TRUE ~ \"Unknown\"))\nif(!require(\"DT\")) install.packages(\"DT\")\n\nLoading required package: DT\n\nlibrary(DT)\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()\n\n\n\n\n## 3A.What transit agency had the most total VRM in our data set?\nAgency_VRM &lt;- USAGE |&gt;\n  group_by(`Agency`)|&gt;\n  summarize(total_VRM = sum(VRM, na.rm = TRUE))\n\nmax_VRM &lt;- max(Agency_VRM$total_VRM, na.rm = TRUE)\n\ntop_Agency &lt;- Agency_VRM |&gt;\n  filter(total_VRM == max_VRM)\n\nprint(top_Agency)\n\n# A tibble: 1 × 2\n  Agency                    total_VRM\n  &lt;chr&gt;                         &lt;dbl&gt;\n1 MTA New York City Transit  48405307\n\n## MTA New York City Transit had the most total VRM in this sample\n\n## 3B.What transit mode had the most total VRM in our data set?\nMode_VRM &lt;- USAGE |&gt;\n  group_by(`Mode`)|&gt;\n  summarize(total_VRM = sum(VRM, na.rm = TRUE))\n\nmax_VRM &lt;- max(Mode_VRM$total_VRM, na.rm = TRUE)\n\ntop_mode &lt;- Mode_VRM |&gt;\n  filter(total_VRM == max_VRM)\n\nprint(top_mode)\n\n# A tibble: 1 × 2\n  Mode  total_VRM\n  &lt;chr&gt;     &lt;dbl&gt;\n1 Bus   282147745\n\n## BUS had the most total VRM in this sample\n\n## 3C.How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\nnyc_subway_may_trips &lt;- TRIPS |&gt;\n  filter(Mode == \"HR\")|&gt;\n  filter(Agency == 'MTA New York City Transit')|&gt;\n  filter(month == \"2024-05-01\")|&gt;\n  select(UPT)\nprint(nyc_subway_may_trips)\n\n# A tibble: 1 × 1\n        UPT\n      &lt;dbl&gt;\n1 180458819\n\n## 180,458,819 trips were taken on the NYC Subway (Heavy Rail) in May 2024\n\n## 3E.How much did NYC subway ridership fall between April 2019 and April 2020?\nnyc_subway_april_trips &lt;- TRIPS |&gt;\n  filter(Mode == 'HR')|&gt;\n  filter(Agency == 'MTA New York City Transit')|&gt;\n  filter(between(month, as.Date(\"2019-04-01\"), as.Date(\"2020-04-01\")))|&gt;\n  summarize(UPT = sum(UPT, na.rm = TRUE))\nprint(nyc_subway_april_trips)\n\n# A tibble: 1 × 1\n         UPT\n       &lt;dbl&gt;\n1 2706415856\n\n## 2,706,415,856 subway ridership fall between April 2019 and April 2020\n\n## 4A.What metro area had the most total VRM in our data set?\nmetro_area_VRM &lt;- USAGE |&gt;\n  group_by(`metro_area`)|&gt;\n  summarize(total_VRM = sum(VRM, na.rm = TRUE))\n\nmax_VRM &lt;- max(metro_area_VRM$total_VRM, na.rm = TRUE)\n\ntop_metro_area &lt;- metro_area_VRM |&gt;\n  filter(total_VRM == max_VRM)\n\nprint(top_metro_area)\n\n# A tibble: 1 × 2\n  metro_area                            total_VRM\n  &lt;chr&gt;                                     &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ 102771989\n\n## New York--Jersey City--Newark, NY--NJ had the most total VRM in this sample\n\n## 4B.How much UPT were taken on the Light Rail in November 2023?\nnyc_subway_may_trips &lt;- TRIPS |&gt;\n  filter(Mode == \"LR\")|&gt;\n  filter(month == \"2023-11-01\")|&gt;\n  summarize(UPT = sum(UPT, na.rm = TRUE))\nprint(nyc_subway_may_trips)\n\n# A tibble: 1 × 1\n       UPT\n     &lt;dbl&gt;\n1 27166436\n\n## 27,166,436 UPT were taken on the Light Rail in November 2023\n\n## 4C.How much did NYC subway ridership fall between March 2020 and March 2022?\nnyc_subway_march_trips &lt;- TRIPS |&gt;\n  filter(Mode == 'HR')|&gt;\n  filter(Agency == 'MTA New York City Transit')|&gt;\n  filter(between(month, as.Date(\"2020-03-01\"), as.Date(\"2022-03-01\")))|&gt;\n  summarize(UPT = sum(UPT, na.rm = TRUE))\nprint(nyc_subway_march_trips)\n\n# A tibble: 1 × 1\n         UPT\n       &lt;dbl&gt;\n1 2341451028\n\n## 2,341,451,028 subway ridership fall between March 2020 and March 2022\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"FB\" ~ \"Ferryboats\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"DR\" ~ \"Demand Reponse\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    TRUE ~ \"Unknown\"))\n\n#5: Table Summarization\nlibrary(dplyr)\nlibrary(lubridate)\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, `Agency`, `metro_area`, `Mode`) |&gt;\n  summarize(\n    UPT = sum(UPT, na.rm = TRUE),\n    VRM = sum(VRM, na.rm = TRUE)\n  ) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'metro_area'. You can\noverride using the `.groups` argument.\n\nprint(USAGE_2022_ANNUAL)\n\n# A tibble: 40 × 6\n   `NTD ID` Agency                                metro_area Mode     UPT    VRM\n      &lt;int&gt; &lt;chr&gt;                                 &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1       23 City of Seattle                       Seattle--… Mono… 151183 2.09e4\n 2       25 Salem Area Mass Transit District      Salem, OR  Vanp…  10890 5.80e4\n 3       46 City of Wilsonville                   Portland,… Bus    14073 5.20e4\n 4    10055 Connecticut Department of Transporta… New Haven… Bus   717160 3.91e5\n 5    11238 Bay State LLC                         Boston, M… Ferr…  26675 1.34e4\n 6    11239 Hyannis Harbor Tours, Inc.            Barnstabl… Ferr… 153914 2.93e4\n 7    20223 Cape May Lewes Ferry                  Atlantic … Ferr… 132412 9.28e3\n 8    20228 Enterprise Holdings, LLC              Syracuse,… Vanp…    484 2.81e3\n 9    30034 Maryland Transit Administration       Baltimore… Dema… 165909 1.11e7\n10    30076 Williamsburg Area Transit Authority   Williamsb… Dema…   1471 1.57e4\n# ℹ 30 more rows\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL,\n    FINANCIALS,\n    join_by(`NTD ID`, Mode)) |&gt;\n  drop_na()\n## 6A.Which transit system (agency and mode) had the most UPT in 2022?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(`Agency`, `Mode`) |&gt;\n    summarize(total_UPT = sum(UPT, na.rm = TRUE))\n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\nmax_UPT &lt;- max(financials_summary$total_UPT, na.rm = TRUE)\n\ntop_transit_system &lt;- financials_summary |&gt;\n  filter(total_UPT == max_UPT)\n\nprint(top_transit_system)\n\n# A tibble: 1 × 3\n# Groups:   Agency [1]\n  Agency                                                         Mode  total_UPT\n  &lt;chr&gt;                                                          &lt;chr&gt;     &lt;dbl&gt;\n1 Connecticut Department of Transportation - CTTRANSIT New Have… Bus      717160\n\n## Connecticut Department of Transportation - CTTRANSIT New Haven Division(Bus)\n\n## 6B.Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_farebox_recovery = sum(`Total Fares`, na.rm = TRUE) / sum(Expenses, na.rm = TRUE), .groups= \"drop\")\n\nmax_farebox_recovery &lt;- max(financials_summary$total_farebox_recovery, na.rm = TRUE)\n\nhighest_farebox_recovery &lt;- financials_summary |&gt;\n  filter(total_farebox_recovery == max_farebox_recovery)\n\nprint(highest_farebox_recovery)\n\n# A tibble: 1 × 3\n  Agency               Mode    total_farebox_recovery\n  &lt;chr&gt;                &lt;chr&gt;                    &lt;dbl&gt;\n1 County of Miami-Dade Vanpool                   1.67\n\n##  County of Miami-Dade (Vanpool)\n\n##6C. Which transit system (agency and mode) has the lowest expenses per UPT?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(expenses_per_UPT = sum(Expenses, na.rm = TRUE) / sum(UPT, na.rm = TRUE), .groups = \"drop\")\n\nmin_expenses_per_UPT &lt;- min(financials_summary$expenses_per_UPT, na.rm = TRUE)\n\nlowest_expense_transit_system &lt;- financials_summary |&gt;\n  filter(expenses_per_UPT == min_expenses_per_UPT)\n\nprint(lowest_expense_transit_system)\n\n# A tibble: 1 × 3\n  Agency                   Mode    expenses_per_UPT\n  &lt;chr&gt;                    &lt;chr&gt;              &lt;dbl&gt;\n1 Enterprise Holdings, LLC Vanpool             5.93\n\n## Enterprise Holdings, LLC (Vanpool)\n\n##6D.Which transit system (agency and mode) has the highest total fares per UPT?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_fares_per_UPT = sum(`Total Fares`, na.rm = TRUE) / sum(UPT, na.rm = TRUE), .groups = \"drop\")\n\nmax_total_fares_per_UPT &lt;- max(financials_summary$total_fares_per_UPT, na.rm = TRUE)\n\nhighest_total_fares_transit_system &lt;- financials_summary |&gt;\n  filter(total_fares_per_UPT == max_total_fares_per_UPT)\n\nprint(highest_total_fares_transit_system)\n\n# A tibble: 1 × 3\n  Agency        Mode       total_fares_per_UPT\n  &lt;chr&gt;         &lt;chr&gt;                    &lt;dbl&gt;\n1 Bay State LLC Ferryboats                236.\n\n## Bay State LLC (Ferryboats)\n\n## 6E. Which transit system (agency and mode) has the lowest expenses per VRM?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(expenses_per_VRM = sum(Expenses, na.rm = TRUE) / sum(VRM, na.rm = TRUE), .groups = \"drop\")\n\nmin_expenses_per_VRM &lt;- min(financials_summary$expenses_per_VRM, na.rm = TRUE)\n\nlowest_expense_transit_system_VRM &lt;- financials_summary |&gt;\n  filter(expenses_per_VRM == min_expenses_per_VRM)\n\nprint(lowest_expense_transit_system_VRM)\n\n# A tibble: 1 × 3\n  Agency                   Mode    expenses_per_VRM\n  &lt;chr&gt;                    &lt;chr&gt;              &lt;dbl&gt;\n1 Enterprise Holdings, LLC Vanpool             1.02\n\n## Enterprise Holdings, LLC (Vanpool)\n\n### 6F.Which transit system (agency and mode) has the highest total fares per VRM?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_fares_per_VRM = sum(`Total Fares`, na.rm = TRUE) / sum(VRM, na.rm = TRUE), .groups = \"drop\")\n\nmax_total_fares_per_VRM &lt;- max(financials_summary$total_fares_per_VRM, na.rm = TRUE)\n\nhighest_total_fares_transit_system_VRM &lt;- financials_summary |&gt;\n  filter(total_fares_per_VRM == max_total_fares_per_VRM)\n\nprint(highest_total_fares_transit_system_VRM)\n\n# A tibble: 1 × 3\n  Agency                     Mode       total_fares_per_VRM\n  &lt;chr&gt;                      &lt;chr&gt;                    &lt;dbl&gt;\n1 Hyannis Harbor Tours, Inc. Ferryboats                886.\n\n### Hyannis Harbor Tours, Inc. (Ferryboats)\n\nhy"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Activities",
    "section": "",
    "text": "“Hello World! I am Victor and this is my MS Data Analytics Journey!”\nMy Resume\nMini Project#1: Report\n\n\n\n\n\n\n\nb385bc496c41bc1730ef9acda38ec719a13e6921"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "MP1",
    "section": "",
    "text": "if(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n# Let's start with Fare Revenue\nlibrary(tidyverse)\nif(!file.exists(\"2022_fare_revenue.xlsx\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_fare_revenue.xlsx\" in your project\n  # directory.\n  download.file(\"http://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx\", \n                destfile=\"2022_fare_revenue.xlsx\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`)\n\n# Next, expenses\nif(!file.exists(\"2022_expenses.csv\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_expenses.csv\" in your project\n  # directory.\n  download.file(\"https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true\", \n                destfile=\"2022_expenses.csv\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nThe previous code will download, clean, and join the tables. The 2022 Fare Revenue file contains all the data of transit Agency, Urbanized Area Name, Mode of transportation, date, Number of Passengers, metro area, and the miles that vehicles travel while in revenue service. The file will later be joined to the expense file that documents the expenses in 2022.\nUsing the above data we can create a comprehensive analysis of how much each transit agency earns in fares relative to their expenses. Later into the project, I will be joining the fare revenue data with the expense file, we can directly compare the income generated by different transit modes against the expenses incurred in running these services. This comparison will provide insights into which transit system in the country are more effective to another.\n\n# Monthly Transit Numbers\nlibrary(tidyverse)\nif(!file.exists(\"ridership.xlsx\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"ridership.xlsx\" in your project\n  # directory.\n  download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx\", \n                destfile=\"ridership.xlsx\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"UPT\") |&gt;\n  drop_na() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"VRM\") |&gt;\n  drop_na() |&gt;\n  group_by(`NTD ID`, `Agency`, `UZA Name`, \n           `Mode`, `3 Mode`, month) |&gt;\n  summarize(VRM = sum(VRM)) |&gt;\n  ungroup() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()\n\n\n\n\nUSAGE &lt;- USAGE |&gt;\n  rename(`metro_area` = `UZA Name`)\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\nTidyverse will help the clarity of the data by manipulating and visualizing the data. Using the select() and filter() functions from dplyr package, I am able to make the data set more manageable and focused on relevant data for specific questions to answer. Columns such as State/Parent NYT ID would not be needed and thus, excluded out. Similar to the Fares and Expenses files, a csv.reader is used to scan large files to output. The rename function would change UZA Name to metro_area, thus becoming more coherent. The USAGE table was created By joining the TRIPS table and MILES table and the FINANCIALS table was created by joining the FARES and EXPENSES tables.\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"FB\" ~ \"Ferryboats\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"DR\" ~ \"Demand Reponse\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    TRUE ~ \"Unknown\"))\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()\n\n\n\n\n\nThe Mode column uses a set of codes that aren’t interpretative. To make the code easy to read, a case_when statement is to transform into something we can make sense of. From the NTD website, I was able to find the abbreviations and reverse it.\n\n## 3A.What transit agency had the most total VRM in our data set?\nAgency_VRM &lt;- USAGE |&gt;\n  group_by(`Agency`)|&gt;\n  summarize(total_VRM = sum(VRM, na.rm = TRUE))\n\nmax_VRM &lt;- max(Agency_VRM$total_VRM, na.rm = TRUE)\n\ntop_Agency &lt;- Agency_VRM |&gt;\n  filter(total_VRM == max_VRM)\n\nprint(top_Agency)\n\n# A tibble: 1 × 2\n  Agency                      total_VRM\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 MTA New York City Transit 10832855350\n\n## MTA New York City Transit had the most total VRM in this sample\n\n## 3B.What transit mode had the most total VRM in our data set?\nMode_VRM &lt;- USAGE |&gt;\n  group_by(`Mode`)|&gt;\n  summarize(total_VRM = sum(VRM, na.rm = TRUE))\n\nmax_VRM &lt;- max(Mode_VRM$total_VRM, na.rm = TRUE)\n\ntop_mode &lt;- Mode_VRM |&gt;\n  filter(total_VRM == max_VRM)\n\nprint(top_mode)\n\n# A tibble: 1 × 2\n  Mode    total_VRM\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Bus   49444494088\n\n## BUS had the most total VRM in this sample\n\n## 3C.How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\nnyc_subway_may_trips &lt;- TRIPS |&gt;\n  filter(Mode == \"HR\")|&gt;\n  filter(Agency == 'MTA New York City Transit')|&gt;\n  filter(month == \"2024-05-01\")|&gt;\n  select(UPT)\nprint(nyc_subway_may_trips)\n\n# A tibble: 1 × 1\n        UPT\n      &lt;dbl&gt;\n1 180458819\n\n## 180,458,819 trips were taken on the NYC Subway (Heavy Rail) in May 2024\n\n## 3E.How much did NYC subway ridership fall between April 2019 and April 2020?\nnyc_subway_april_trips &lt;- TRIPS |&gt;\n  filter(Mode == 'HR')|&gt;\n  filter(Agency == 'MTA New York City Transit')|&gt;\n  filter(between(month, as.Date(\"2019-04-01\"), as.Date(\"2020-04-01\")))|&gt;\n  summarize(UPT = sum(UPT, na.rm = TRUE))\nprint(nyc_subway_april_trips)\n\n# A tibble: 1 × 1\n         UPT\n       &lt;dbl&gt;\n1 2706415856\n\n## 2,706,415,856 subway ridership fall between April 2019 and April 2020\n\n## 4A.What metro area had the most total VRM in our data set?\nmetro_area_VRM &lt;- USAGE |&gt;\n  group_by(`metro_area`)|&gt;\n  summarize(total_VRM = sum(VRM, na.rm = TRUE))\n\nmax_VRM &lt;- max(metro_area_VRM$total_VRM, na.rm = TRUE)\n\ntop_metro_area &lt;- metro_area_VRM |&gt;\n  filter(total_VRM == max_VRM)\n\nprint(top_metro_area)\n\n# A tibble: 1 × 2\n  metro_area                              total_VRM\n  &lt;chr&gt;                                       &lt;dbl&gt;\n1 New York--Jersey City--Newark, NY--NJ 21190345637\n\n## New York--Jersey City--Newark, NY--NJ had the most total VRM in this sample\n\n## 4B.How much UPT were taken on the Light Rail in November 2023?\nnyc_subway_may_trips &lt;- TRIPS |&gt;\n  filter(Mode == \"LR\")|&gt;\n  filter(month == \"2023-11-01\")|&gt;\n  summarize(UPT = sum(UPT, na.rm = TRUE))\nprint(nyc_subway_may_trips)\n\n# A tibble: 1 × 1\n       UPT\n     &lt;dbl&gt;\n1 27166436\n\n## 27,166,436 UPT were taken on the Light Rail in November 2023\n\n## 4C.How much did NYC subway ridership fall between March 2020 and March 2022?\nnyc_subway_march_trips &lt;- TRIPS |&gt;\n  filter(Mode == 'HR')|&gt;\n  filter(Agency == 'MTA New York City Transit')|&gt;\n  filter(between(month, as.Date(\"2020-03-01\"), as.Date(\"2022-03-01\")))|&gt;\n  summarize(UPT = sum(UPT, na.rm = TRUE))\nprint(nyc_subway_march_trips)\n\n# A tibble: 1 × 1\n         UPT\n       &lt;dbl&gt;\n1 2341451028\n\n## 2,341,451,028 subway ridership fall between March 2020 and March 2022\n\nThe following questions are some examples that the data set can answer:\n1.What transit agency had the most total VRM in our data set? MTA New York City Transit had the most total VRM in this sample\n2.What transit mode had the most total VRM in our data set? BUS had the most total VRM in this sample\n3.How many trips were taken on the NYC Subway (Heavy Rail) in May 2024? 180,458,819 trips were taken on the NYC Subway (Heavy Rail) in May 2024\n4.How much did NYC subway ridership fall between April 2019 and April 2020? 2,706,415,856 subway ridership fall between April 2019 and April 2020\n5.What metro area had the most total VRM in our data set? New York–Jersey City–Newark, NY–NJ had the most total VRM in this sample\n6.How much UPT were taken on the Light Rail in November 2023? 27,166,436 UPT were taken on the Light Rail in November 2023\n7.How much did NYC subway ridership fall between March 2020 and March 2022? 2,341,451,028 subway ridership fall between March 2020 and March 2022\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\",\n    Mode == \"FB\" ~ \"Ferryboats\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"DR\" ~ \"Demand Reponse\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    TRUE ~ \"Unknown\"))\n\n#5: Table Summarization\nlibrary(dplyr)\nlibrary(lubridate)\n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, `Agency`, `metro_area`, `Mode`) |&gt;\n  summarize(\n    UPT = sum(UPT, na.rm = TRUE),\n    VRM = sum(VRM, na.rm = TRUE)\n  ) |&gt;\n  ungroup()\nprint(USAGE_2022_ANNUAL)\n\n# A tibble: 1,141 × 6\n   `NTD ID` Agency                                metro_area Mode     UPT    VRM\n      &lt;int&gt; &lt;chr&gt;                                 &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1        1 King County                           Seattle--… Bus   5.40e7 6.16e7\n 2        1 King County                           Seattle--… Dema… 6.63e5 1.29e7\n 3        1 King County                           Seattle--… Ferr… 4.00e5 5.12e4\n 4        1 King County                           Seattle--… Stre… 1.12e6 1.80e5\n 5        1 King County                           Seattle--… Trol… 9.58e6 2.64e6\n 6        1 King County                           Seattle--… Vanp… 7.03e5 4.41e6\n 7        2 Spokane Transit Authority             Spokane, … Bus   6.60e6 6.49e6\n 8        2 Spokane Transit Authority             Spokane, … Dema… 3.10e5 4.04e6\n 9        2 Spokane Transit Authority             Spokane, … Vanp… 9.06e4 9.06e5\n10        3 Pierce County Transportation Benefit… Seattle--… Bus   4.95e6 4.23e6\n# ℹ 1,131 more rows\n\nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL,\n    FINANCIALS,\n    join_by(`NTD ID`, Mode)) |&gt;\n  drop_na()\n\nSimilarly to the USAGE MODE Column, to ensure all the data is consistent, it is crucial to do the same in the FINANCALS table.The code filter uses the year() function from lubridate package It then groups the data by NTD ID, Agency, metro_area, Mode.The summarize function calculates the total Unlinked Passenger Trips (UPT) and Vehicle Revenue Miles and sums up the total. After summarizing, ungroup() is called to remove the grouping,making the dataset easier to work with.\n\n## 6A.Which transit system (agency and mode) had the most UPT in 2022?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(`Agency`, `Mode`) |&gt;\n    summarize(total_UPT = sum(UPT, na.rm = TRUE))\n\nmax_UPT &lt;- max(financials_summary$total_UPT, na.rm = TRUE)\n\ntop_transit_system &lt;- financials_summary |&gt;\n  filter(total_UPT == max_UPT)\n\nprint(top_transit_system)\n\n# A tibble: 1 × 3\n# Groups:   Agency [1]\n  Agency                    Mode        total_UPT\n  &lt;chr&gt;                     &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit Heavy Rail 1793073801\n\n## MTA New York City Transit Heavy Rail (Heavy Rail) has the most UPT in 2022\n\n## 6B.Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_farebox_recovery = sum(`Total Fares`, na.rm = TRUE) / sum(Expenses, na.rm = TRUE), .groups= \"drop\")\n\nmax_farebox_recovery &lt;- max(financials_summary$total_farebox_recovery, na.rm = TRUE)\n\nhighest_farebox_recovery &lt;- financials_summary |&gt;\n  filter(total_farebox_recovery == max_farebox_recovery)\n\nprint(highest_farebox_recovery)\n\n# A tibble: 1 × 3\n  Agency                                Mode    total_farebox_recovery\n  &lt;chr&gt;                                 &lt;chr&gt;                    &lt;dbl&gt;\n1 Transit Authority of Central Kentucky Vanpool                   2.38\n\n##  Transit Authority of Central Kentucky (Vanpool)\n\n##6C. Which transit system (agency and mode) has the lowest expenses per UPT?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(expenses_per_UPT = sum(Expenses, na.rm = TRUE) / sum(UPT, na.rm = TRUE), .groups = \"drop\")\n\nmin_expenses_per_UPT &lt;- min(financials_summary$expenses_per_UPT, na.rm = TRUE)\n\nlowest_expense_transit_system &lt;- financials_summary |&gt;\n  filter(expenses_per_UPT == min_expenses_per_UPT)\n\nprint(lowest_expense_transit_system)\n\n# A tibble: 1 × 3\n  Agency                          Mode  expenses_per_UPT\n  &lt;chr&gt;                           &lt;chr&gt;            &lt;dbl&gt;\n1 North Carolina State University Bus               1.18\n\n## North Carolina State University (Bus)\n\n##6D.Which transit system (agency and mode) has the highest total fares per UPT?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_fares_per_UPT = sum(`Total Fares`, na.rm = TRUE) / sum(UPT, na.rm = TRUE), .groups = \"drop\")\n\nmax_total_fares_per_UPT &lt;- max(financials_summary$total_fares_per_UPT, na.rm = TRUE)\n\nhighest_total_fares_transit_system &lt;- financials_summary |&gt;\n  filter(total_fares_per_UPT == max_total_fares_per_UPT)\n\nprint(highest_total_fares_transit_system)\n\n# A tibble: 1 × 3\n  Agency                Mode           total_fares_per_UPT\n  &lt;chr&gt;                 &lt;chr&gt;                        &lt;dbl&gt;\n1 Altoona Metro Transit Demand Reponse                330.\n\n## Altoona Metro Transit (Demand Reponse)\n\n## 6E. Which transit system (agency and mode) has the lowest expenses per VRM?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(expenses_per_VRM = sum(Expenses, na.rm = TRUE) / sum(VRM, na.rm = TRUE), .groups = \"drop\")\n\nmin_expenses_per_VRM &lt;- min(financials_summary$expenses_per_VRM, na.rm = TRUE)\n\nlowest_expense_transit_system_VRM &lt;- financials_summary |&gt;\n  filter(expenses_per_VRM == min_expenses_per_VRM)\n\nprint(lowest_expense_transit_system_VRM)\n\n# A tibble: 1 × 3\n  Agency                                  Mode    expenses_per_VRM\n  &lt;chr&gt;                                   &lt;chr&gt;              &lt;dbl&gt;\n1 New Mexico Department of Transportation Vanpool            0.337\n\n## New Mexico Department of Transportation (Vanpool)\n\n### 6F.Which transit system (agency and mode) has the highest total fares per VRM?\nfinancials_summary &lt;- USAGE_AND_FINANCIALS |&gt;\n  group_by(Agency, Mode) |&gt;\n  summarize(total_fares_per_VRM = sum(`Total Fares`, na.rm = TRUE) / sum(VRM, na.rm = TRUE), .groups = \"drop\")\n\nmax_total_fares_per_VRM &lt;- max(financials_summary$total_fares_per_VRM, na.rm = TRUE)\n\nhighest_total_fares_transit_system_VRM &lt;- financials_summary |&gt;\n  filter(total_fares_per_VRM == max_total_fares_per_VRM)\n\nprint(highest_total_fares_transit_system_VRM)\n\n# A tibble: 1 × 3\n  Agency                        Mode       total_fares_per_VRM\n  &lt;chr&gt;                         &lt;chr&gt;                    &lt;dbl&gt;\n1 Chicago Water Taxi (Wendella) Ferryboats                237.\n\n### Chicago Water Taxi (Wendella) (Ferryboats)\n\nThe following questions are some examples that the data set can answer:\n1.Which transit system (agency and mode) had the most UPT in 2022? MTA New York City Transit Heavy Rail (Heavy Rail) has the most UPT in 2022.\n2.Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses? Transit Authority of Central Kentucky (Vanpool) had the highest farebox recovery.\n3.Which transit system (agency and mode) has the lowest expenses per UPT? North Carolina State University (Bus) has the lowest expenses per UPT.\n4.Which transit system (agency and mode) has the highest total fares per UPT? Altoona Metro Transit (Demand Reponse) has the highest total fares per UPT.\n5.Which transit system (agency and mode) has the lowest expenses per VRM? New Mexico Department of Transportation (Vanpool) has the lowest expenses per VRM.\n6.Which transit system (agency and mode) has the highest total fares per VRM? Chicago Water Taxi (Wendella) (Ferryboats) has the highest total fares per VRM."
  }
]